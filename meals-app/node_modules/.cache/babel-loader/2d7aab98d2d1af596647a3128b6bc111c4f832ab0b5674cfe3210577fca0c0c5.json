{"ast":null,"code":"var _jsxFileName = \"/Users/Zainab/Desktop/TransitGtaewayApp/frontend/meals-app/src/components/MealCard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MealCard({\n  mealJSON,\n  setTitle,\n  setUrl,\n  setImgUrl,\n  setId\n}) {\n  const mealsData = JSON.parse(mealJSON);\n  console.log(mealsData.imageUrl);\n  const validJsonString = mealsData.ingredients.replace(/'/g, '\"').replace(/½/g, \"\\u00BD\").replace(/¾/g, \"\\u00BE\");\n  console.log(validJsonString);\n\n  // Parse the JSON string to an array\n  const ingredientsArray = JSON.parse(validJsonString);\n\n  // Log the array to the console\n  console.log(ingredientsArray);\n  firstColumn = ingredientsArray.slice(0, 5);\n  const secondColumn = ingredientsArray.slice(5);\n  return /*#__PURE__*/_jsxDEV(Col, {\n    xs: 12,\n    style: {\n      paddingBottom: '24px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: mealsData.imageUrl,\n              alt: \"Image Not Found\",\n              style: {\n                height: '100%',\n                width: '100%',\n                objectFit: 'cover'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 8,\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: mealsData.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ingredients:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    justifyContent: 'space-between'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: firstColumn.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: ingredient\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 47,\n                      columnNumber: 23\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: secondColumn.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: ingredient\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 52,\n                      columnNumber: 23\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Directions:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }, this), \" \", mealsData.instructions]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = MealCard;\nMealCard.propTypes = {\n  mealJSON: PropTypes.string.isRequired,\n  setTitle: PropTypes.func.isRequired,\n  setUrl: PropTypes.func.isRequired,\n  setImgUrl: PropTypes.func.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"MealCard\");","map":{"version":3,"names":["React","PropTypes","Col","Row","Card","jsxDEV","_jsxDEV","MealCard","mealJSON","setTitle","setUrl","setImgUrl","setId","mealsData","JSON","parse","console","log","imageUrl","validJsonString","ingredients","replace","ingredientsArray","firstColumn","slice","secondColumn","xs","style","paddingBottom","children","Body","Img","variant","src","alt","height","width","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","Header","title","Text","display","justifyContent","map","ingredient","index","instructions","_c","propTypes","string","isRequired","func","$RefreshReg$"],"sources":["/Users/Zainab/Desktop/TransitGtaewayApp/frontend/meals-app/src/components/MealCard.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\n\nexport default function MealCard({\n  mealJSON, setTitle, setUrl, setImgUrl, setId,\n}) {\n  const mealsData = JSON.parse(mealJSON);\n  console.log(mealsData.imageUrl);\n\n  const validJsonString = mealsData.ingredients.replace(/'/g, '\"').replace(/½/g, \"\\u00BD\").replace(/¾/g, \"\\u00BE\");\n\n  console.log(validJsonString)\n\n  // Parse the JSON string to an array\n  const ingredientsArray = JSON.parse(validJsonString);\n\n  // Log the array to the console\n  console.log(ingredientsArray);\n  firstColumn = ingredientsArray.slice(0, 5);\n  const secondColumn = ingredientsArray.slice(5);\n\n \n  return (\n    <Col xs={12} style={{ paddingBottom: '24px' }}>\n      <Card>\n        <Card.Body>\n          <Row>\n            <Col xs={4}>\n              <Card.Img\n                variant=\"top\"\n                src={mealsData.imageUrl}\n                alt=\"Image Not Found\"\n                style={{ height: '100%', width: '100%', objectFit: 'cover' }}\n              />\n            </Col>\n            <Col xs={8}>\n              <Card.Header>{mealsData.title}</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  <strong>Ingredients:</strong> \n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <ul>\n                    {firstColumn.map((ingredient, index) => (\n                      <li key={index}>{ingredient}</li>\n                    ))}\n                  </ul>\n                  <ul>\n                    {secondColumn.map((ingredient, index) => (\n                      <li key={index}>{ingredient}</li>\n                    ))}\n                  </ul>\n                </div>\n                </Card.Text>\n                <Card.Text>\n                  <strong>Directions:</strong> {mealsData.instructions}\n                </Card.Text>\n              </Card.Body>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n}\n\nMealCard.propTypes = {\n  mealJSON: PropTypes.string.isRequired,\n  setTitle: PropTypes.func.isRequired,\n  setUrl: PropTypes.func.isRequired,\n  setImgUrl: PropTypes.func.isRequired\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}